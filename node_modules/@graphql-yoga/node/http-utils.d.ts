/// <reference types="node" />
import type { IncomingMessage, ServerResponse } from 'http';
import type { AddressInfo } from './types';
export interface NodeRequest {
    protocol?: string;
    hostname?: string;
    body?: any;
    url?: string;
    method?: string;
    headers: any;
    req?: IncomingMessage;
    raw?: IncomingMessage;
}
export declare function getNodeRequest(nodeRequest: NodeRequest, defaultAddressInfo: AddressInfo): Promise<Request>;
declare global {
    interface ReadableStream<R = any> {
        [Symbol.asyncIterator]: () => AsyncIterator<R>;
    }
}
export declare function sendNodeResponse({ headers, status, statusText, body }: Response, serverResponse: ServerResponse): void;
